{
  "hash": "7db8bae96518eef59ba8187ae5ae42e2",
  "result": {
    "markdown": "---\ntitle: Identifying Open Data about the City of Buffalo and Western New York\nsubtitle: Starting the journey to make some interesting and fun insights about my hometown by identifying open datasets\nimage: \"images/opendata_logo.jpeg\"\ndate: \"07/31/2023\"\npage-layout: article\ntoc: true\ndraft: false\ncomments:\n  utterances:\n    repo: ngiangre/quarto-site\n---\n\n\n[Open Data Buffalo](https://data.buffalony.gov) is a great resource and initiative to make datasets open and available to the public. My goal looking here is to identify and download available datasets about my hometown. This is the first leg of the journey in order to perform analyses or create web applications that do something interesting, fun, and possibly useful with data from my hometown. Along thhe way, I hope to learn more about APIs, Shiny development, and knowledge about the place I call home. \n\nLet's get started!\n\nI first made an account with [Tyler Data and Insights](https://data.buffalony.gov/signup). Not sure why, but I may learn why later on.\n\nSecond, I [searched](https://data.buffalony.gov/browse?limitTo=datasets&sortBy=most_accessed&utf8=✓) for datasets and sorted by most accessed datasets.\n\n[![Screenshot of search filter and sorted site](images/Screenshot 2023-07-30 at 1.08.24 PM.png){fig-alt=\"Screenshot of search filter and sorted site\"}](https://data.buffalony.gov/browse?limitTo=datasets&sortBy=most_accessed&utf8=✓)\n\nAnd after scrolling through a few pages, I'm curious to look at the Active Corporations dataset.\n\n[![Screenshot of Active Corporations dataset webpage](images/Screenshot 2023-07-30 at 1.11.15 PM.png){fig-alt=\"Screenshot of Active Corporations dataset webpage\" fig-align=\"center\"}](https://data.ny.gov/Economic-Development/Active-Corporations-Beginning-1800/n9v6-gdp6)\n\nLuckily, this dataset has a few options to access the data:\n\n![Screenshot of API options](images/Screenshot 2023-07-30 at 1.12.21 PM.png){fig-alt=\"Screenshot of API options\" fig-align=\"center\"}\n\nAnd below is some information about the dataset on the webpage. It has 3.6 million rows and 30 columns.\n\n[![Screenshot of Active Corporations dataset description](images/Screenshot 2023-07-30 at 1.13.58 PM.png){fig-alt=\"Screenshot of Active Corporations dataset description\" fig-align=\"center\"}](https://data.ny.gov/Economic-Development/Active-Corporations-Beginning-1800/n9v6-gdp6)\n\nLet's see what happens when I try to view this dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(jsonlite)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\njobj <- jsonlite::read_json(\"https://data.ny.gov/resource/n9v6-gdp6.json\",simplifyVector = TRUE)\n\njobj %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 30\n$ dos_id                     <chr> \"4072354\", \"6221345\", \"4265810\", \"1330171\",…\n$ current_entity_name        <chr> \"GRACE SEAFOOD CORP.\", \"KV CATALYST IM, LLC…\n$ initial_dos_filing_date    <chr> \"2011-03-24T00:00:00.000\", \"2021-07-15T00:0…\n$ county                     <chr> \"Bronx\", \"New York\", \"Queens\", \"Cayuga\", \"B…\n$ jurisdiction               <chr> \"New York\", \"Delaware\", \"New York\", \"New Yo…\n$ entity_type                <chr> \"DOMESTIC BUSINESS CORPORATION\", \"FOREIGN L…\n$ dos_process_name           <chr> \"GRACE SEAFOOD CORP.\", \"KV CATALYST IM, LLC…\n$ dos_process_address_1      <chr> \"1226 EAST 183RD STREET\", \"2373 BROADWAY, A…\n$ dos_process_city           <chr> \"BRONX\", \"NEW YORK\", \"MIDDLE VILLAGE\", \"AUB…\n$ dos_process_state          <chr> \"NY\", \"NY\", \"NY\", \"NY\", \"NY\", \"NY\", \"NY\", \"…\n$ dos_process_zip            <chr> \"10453\", \"10024\", \"11379\", \"13021\", \"10467\"…\n$ chairman_name              <chr> NA, NA, NA, \"GARY J. CUNNINGHAM, JR.\", NA, …\n$ chairman_address_1         <chr> NA, NA, NA, \"GARY J. CUNNINGHAM, JR.\", NA, …\n$ chairman_city              <chr> NA, NA, NA, \"AUBURN\", NA, \"BRONX\", \"ATLANTI…\n$ chairman_state             <chr> NA, NA, NA, \"NY\", NA, \"NY\", \"NY\", \"NY\", NA,…\n$ chairman_zip               <chr> NA, NA, NA, \"130210251\", NA, \"10469\", \"1150…\n$ location_name              <chr> NA, NA, NA, \"YAWGER BROOK BAKES, INC.\", NA,…\n$ location_address_1         <chr> NA, NA, NA, \"C/O GARY J. CUNNINGHAM, JR.\", …\n$ location_address_2         <chr> NA, NA, NA, \"323 CLARK ST\", NA, \"1ST FL\", N…\n$ location_city              <chr> NA, NA, NA, \"AUBURN\", NA, \"BRONX\", \"ATLANTI…\n$ location_state             <chr> NA, NA, NA, \"NY\", NA, \"NY\", \"NY\", \"NY\", NA,…\n$ location_zip               <chr> NA, NA, NA, \"13021\", NA, \"10469\", \"11509\", …\n$ dos_process_address_2      <chr> NA, NA, NA, NA, NA, \"1ST FL\", NA, NA, NA, \"…\n$ chairman_address_2         <chr> NA, NA, NA, NA, NA, \"1ST FL\", NA, NA, NA, N…\n$ registered_agent_name      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ registered_agent_address_1 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ registered_agent_city      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ registered_agent_state     <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ registered_agent_zip       <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ registered_agent_address_2 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n:::\n:::\n\n\nInteresting! I may come back to this but let's see what another dataset looks like. The dataset description is on the site below.\n\n[![Screenshot of Inpatient Discharge dataset. ](images/Screenshot 2023-07-30 at 1.23.48 PM.png){fig-alt=\"Screenshot of Inpatient Discharge dataset\"}](https://health.data.ny.gov/Health/Hospital-Inpatient-Discharges-SPARCS-De-Identified/u4ud-w55t)\n\n\n::: {.cell}\n\n```{.r .cell-code}\njobj <- jsonlite::read_json(\"https://health.data.ny.gov/resource/u4ud-w55t.json\",simplifyVector = TRUE)\n\njobj %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 34\n$ hospital_service_area               <chr> \"Capital/Adirond\", \"Capital/Adiron…\n$ hospital_county                     <chr> \"Albany\", \"Albany\", \"Albany\", \"Alb…\n$ operating_certificate_number        <chr> \"0101000\", \"0101000\", \"0101000\", \"…\n$ facility_id                         <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ facility_name                       <chr> \"Albany Medical Center Hospital\", …\n$ age_group                           <chr> \"0 to 17\", \"0 to 17\", \"18 to 29\", …\n$ zip_code_3_digits                   <chr> \"121\", \"121\", \"120\", \"121\", \"124\",…\n$ gender                              <chr> \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"M\",…\n$ race                                <chr> \"Other Race\", \"White\", \"White\", \"W…\n$ ethnicity                           <chr> \"Not Span/Hispanic\", \"Not Span/His…\n$ length_of_stay                      <chr> \"1\", \"1\", \"3\", \"2\", \"3\", \"3\", \"3\",…\n$ type_of_admission                   <chr> \"Urgent\", \"Emergency\", \"Urgent\", \"…\n$ patient_disposition                 <chr> \"Home or Self Care\", \"Home or Self…\n$ discharge_year                      <chr> \"2012\", \"2012\", \"2012\", \"2012\", \"2…\n$ ccs_diagnosis_code                  <chr> \"128\", \"251\", \"184\", \"189\", \"042\",…\n$ ccs_diagnosis_description           <chr> \"Asthma\", \"Abdominal pain\", \"Early…\n$ ccs_procedure_code                  <chr> \"000\", \"000\", \"000\", \"134\", \"090\",…\n$ ccs_procedure_description           <chr> \"NO PROC\", \"NO PROC\", \"NO PROC\", \"…\n$ apr_drg_code                        <chr> \"141\", \"251\", \"563\", \"540\", \"224\",…\n$ apr_drg_description                 <chr> \"Asthma\", \"Abdominal pain\", \"Prete…\n$ apr_mdc_code                        <chr> \"04\", \"06\", \"14\", \"14\", \"06\", \"14\"…\n$ apr_mdc_description                 <chr> \"Diseases and Disorders of the Res…\n$ apr_severity_of_illness_code        <chr> \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\",…\n$ apr_severity_of_illness_description <chr> \"Moderate\", \"Minor\", \"Moderate\", \"…\n$ apr_risk_of_mortality               <chr> \"Minor\", \"Minor\", \"Minor\", \"Minor\"…\n$ apr_medical_surgical_description    <chr> \"Medical\", \"Medical\", \"Medical\", \"…\n$ source_of_payment_1                 <chr> \"Medicaid\", \"Medicaid\", \"Medicaid\"…\n$ source_of_payment_2                 <chr> \"Medicaid\", \"Self-Pay\", \"Medicaid\"…\n$ source_of_payment_3                 <chr> \"Self-Pay\", NA, \"Self-Pay\", NA, \"S…\n$ birth_weight                        <chr> \"0000\", \"0000\", \"0000\", \"0000\", \"0…\n$ abortion_edit_indicator             <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ emergency_department_indicator      <chr> \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ total_charges                       <chr> \"9965.25\", \"6685.95\", \"12885.00\", …\n$ total_costs                         <chr> \"3269.66\", \"2148.08\", \"4132.75\", \"…\n```\n:::\n:::\n\n\nIt looks like I'm only downloading 1000 rows from each dataset. Hmmm. It looks like I can export the button by pressing the 'Export' button, but I don't want to have datasets on my laptop. I rather load them into my environment as needed by whatever I would end up developing. Maybe I need to read these [SODA docs](https://dev.socrata.com/consumers/getting-started.html) that are linked on the site.\n\n[![Screenshot of SODA Getting Started docs](images/Screenshot 2023-07-30 at 1.33.09 PM.png){fig-alt=\"Screenshot of SODA Getting Started docs\" fig-align=\"center\"}](https://dev.socrata.com/consumers/getting-started.html)\n\nSo it seems like I need to use some extra parameter filtering? Let's try it.\n\n\n::: {.cell}\n\n```{.r .cell-code}\njobj <- jsonlite::read_json(\"https://health.data.ny.gov/resource/u4ud-w55t.json?apr_drg_description=Asthma\",simplifyVector = TRUE)\n\njobj %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 34\n$ hospital_service_area               <chr> \"Capital/Adirond\", \"Capital/Adiron…\n$ hospital_county                     <chr> \"Albany\", \"Albany\", \"Albany\", \"Alb…\n$ operating_certificate_number        <chr> \"0101000\", \"0101000\", \"0101000\", \"…\n$ facility_id                         <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ facility_name                       <chr> \"Albany Medical Center Hospital\", …\n$ age_group                           <chr> \"0 to 17\", \"0 to 17\", \"0 to 17\", \"…\n$ zip_code_3_digits                   <chr> \"121\", \"124\", \"128\", \"OOS\", \"124\",…\n$ gender                              <chr> \"F\", \"M\", \"M\", \"M\", \"M\", \"F\", \"M\",…\n$ race                                <chr> \"Other Race\", \"White\", \"Other Race…\n$ ethnicity                           <chr> \"Not Span/Hispanic\", \"Not Span/His…\n$ length_of_stay                      <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ type_of_admission                   <chr> \"Urgent\", \"Urgent\", \"Urgent\", \"Urg…\n$ patient_disposition                 <chr> \"Home or Self Care\", \"Home or Self…\n$ discharge_year                      <chr> \"2012\", \"2012\", \"2012\", \"2012\", \"2…\n$ ccs_diagnosis_code                  <chr> \"128\", \"128\", \"128\", \"128\", \"128\",…\n$ ccs_diagnosis_description           <chr> \"Asthma\", \"Asthma\", \"Asthma\", \"Ast…\n$ ccs_procedure_code                  <chr> \"000\", \"000\", \"000\", \"000\", \"000\",…\n$ ccs_procedure_description           <chr> \"NO PROC\", \"NO PROC\", \"NO PROC\", \"…\n$ apr_drg_code                        <chr> \"141\", \"141\", \"141\", \"141\", \"141\",…\n$ apr_drg_description                 <chr> \"Asthma\", \"Asthma\", \"Asthma\", \"Ast…\n$ apr_mdc_code                        <chr> \"04\", \"04\", \"04\", \"04\", \"04\", \"04\"…\n$ apr_mdc_description                 <chr> \"Diseases and Disorders of the Res…\n$ apr_severity_of_illness_code        <chr> \"2\", \"1\", \"2\", \"2\", \"1\", \"1\", \"1\",…\n$ apr_severity_of_illness_description <chr> \"Moderate\", \"Minor\", \"Moderate\", \"…\n$ apr_risk_of_mortality               <chr> \"Minor\", \"Minor\", \"Minor\", \"Minor\"…\n$ apr_medical_surgical_description    <chr> \"Medical\", \"Medical\", \"Medical\", \"…\n$ source_of_payment_1                 <chr> \"Medicaid\", \"Managed Care, Unspeci…\n$ source_of_payment_2                 <chr> \"Medicaid\", \"Self-Pay\", \"Self-Pay\"…\n$ source_of_payment_3                 <chr> \"Self-Pay\", NA, NA, NA, NA, NA, NA…\n$ birth_weight                        <chr> \"0000\", \"0000\", \"0000\", \"0000\", \"0…\n$ abortion_edit_indicator             <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ emergency_department_indicator      <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ total_charges                       <chr> \"9965.25\", \"7003.18\", \"3458.39\", \"…\n$ total_costs                         <chr> \"3269.66\", \"2313.70\", \"1175.09\", \"…\n```\n:::\n:::\n\n\nI think that worked - I only downloaded Asthma items! But still, a limited dataset of 1000 rows was downloaded. What do I need to download all items? Ah, looks like I need to read about the application token usage.\n\n[![Screenshot of throttling and application tokens](images/Screenshot 2023-07-30 at 1.38.17 PM.png){fig-alt=\"Screenshot of throttling and application tokens\"}](https://dev.socrata.com/consumers/getting-started.html)\n\nI must use an App token. I will create one in my profile settings - this must be why my previous self made the account earlier on in this post. Huzzah! So now that I created an app token, let's try using it. I'll use the glue package to read it in from a hidden file so I don't have it sown here 😁\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(glue)\n\njobj <- jsonlite::read_json(glue::glue(\"https://health.data.ny.gov/resource/u4ud-w55t.json?$$app_token={read_json('.apptoken')[['token']]}\"),simplifyVector = T)\n\njobj %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 34\n$ hospital_service_area               <chr> \"Capital/Adirond\", \"Capital/Adiron…\n$ hospital_county                     <chr> \"Albany\", \"Albany\", \"Albany\", \"Alb…\n$ operating_certificate_number        <chr> \"0101000\", \"0101000\", \"0101000\", \"…\n$ facility_id                         <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ facility_name                       <chr> \"Albany Medical Center Hospital\", …\n$ age_group                           <chr> \"0 to 17\", \"0 to 17\", \"18 to 29\", …\n$ zip_code_3_digits                   <chr> \"121\", \"121\", \"120\", \"121\", \"124\",…\n$ gender                              <chr> \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"M\",…\n$ race                                <chr> \"Other Race\", \"White\", \"White\", \"W…\n$ ethnicity                           <chr> \"Not Span/Hispanic\", \"Not Span/His…\n$ length_of_stay                      <chr> \"1\", \"1\", \"3\", \"2\", \"3\", \"3\", \"3\",…\n$ type_of_admission                   <chr> \"Urgent\", \"Emergency\", \"Urgent\", \"…\n$ patient_disposition                 <chr> \"Home or Self Care\", \"Home or Self…\n$ discharge_year                      <chr> \"2012\", \"2012\", \"2012\", \"2012\", \"2…\n$ ccs_diagnosis_code                  <chr> \"128\", \"251\", \"184\", \"189\", \"042\",…\n$ ccs_diagnosis_description           <chr> \"Asthma\", \"Abdominal pain\", \"Early…\n$ ccs_procedure_code                  <chr> \"000\", \"000\", \"000\", \"134\", \"090\",…\n$ ccs_procedure_description           <chr> \"NO PROC\", \"NO PROC\", \"NO PROC\", \"…\n$ apr_drg_code                        <chr> \"141\", \"251\", \"563\", \"540\", \"224\",…\n$ apr_drg_description                 <chr> \"Asthma\", \"Abdominal pain\", \"Prete…\n$ apr_mdc_code                        <chr> \"04\", \"06\", \"14\", \"14\", \"06\", \"14\"…\n$ apr_mdc_description                 <chr> \"Diseases and Disorders of the Res…\n$ apr_severity_of_illness_code        <chr> \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\",…\n$ apr_severity_of_illness_description <chr> \"Moderate\", \"Minor\", \"Moderate\", \"…\n$ apr_risk_of_mortality               <chr> \"Minor\", \"Minor\", \"Minor\", \"Minor\"…\n$ apr_medical_surgical_description    <chr> \"Medical\", \"Medical\", \"Medical\", \"…\n$ source_of_payment_1                 <chr> \"Medicaid\", \"Medicaid\", \"Medicaid\"…\n$ source_of_payment_2                 <chr> \"Medicaid\", \"Self-Pay\", \"Medicaid\"…\n$ source_of_payment_3                 <chr> \"Self-Pay\", NA, \"Self-Pay\", NA, \"S…\n$ birth_weight                        <chr> \"0000\", \"0000\", \"0000\", \"0000\", \"0…\n$ abortion_edit_indicator             <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ emergency_department_indicator      <chr> \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ total_charges                       <chr> \"9965.25\", \"6685.95\", \"12885.00\", …\n$ total_costs                         <chr> \"3269.66\", \"2148.08\", \"4132.75\", \"…\n```\n:::\n:::\n\n\nHmmm still a limited dataset downloaded even with the app token. Let's see if there is an http message.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\nres <- httr::GET(glue::glue(\"https://health.data.ny.gov/resource/u4ud-w55t.json?$$app_token={read_json('.apptoken')[['token']]}\"))\n\nnames(res)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"url\"         \"status_code\" \"headers\"     \"all_headers\" \"cookies\"    \n [6] \"content\"     \"date\"        \"times\"       \"request\"     \"handle\"     \n```\n:::\n\n```{.r .cell-code}\nres$status_code\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 200\n```\n:::\n\n```{.r .cell-code}\nrlist <- httr::content(res)\n\ndo.call(dplyr::bind_rows, rlist) %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,000\nColumns: 34\n$ hospital_service_area               <chr> \"Capital/Adirond\", \"Capital/Adiron…\n$ hospital_county                     <chr> \"Albany\", \"Albany\", \"Albany\", \"Alb…\n$ operating_certificate_number        <chr> \"0101000\", \"0101000\", \"0101000\", \"…\n$ facility_id                         <chr> \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\",…\n$ facility_name                       <chr> \"Albany Medical Center Hospital\", …\n$ age_group                           <chr> \"0 to 17\", \"0 to 17\", \"18 to 29\", …\n$ zip_code_3_digits                   <chr> \"121\", \"121\", \"120\", \"121\", \"124\",…\n$ gender                              <chr> \"F\", \"F\", \"F\", \"F\", \"M\", \"F\", \"M\",…\n$ race                                <chr> \"Other Race\", \"White\", \"White\", \"W…\n$ ethnicity                           <chr> \"Not Span/Hispanic\", \"Not Span/His…\n$ length_of_stay                      <chr> \"1\", \"1\", \"3\", \"2\", \"3\", \"3\", \"3\",…\n$ type_of_admission                   <chr> \"Urgent\", \"Emergency\", \"Urgent\", \"…\n$ patient_disposition                 <chr> \"Home or Self Care\", \"Home or Self…\n$ discharge_year                      <chr> \"2012\", \"2012\", \"2012\", \"2012\", \"2…\n$ ccs_diagnosis_code                  <chr> \"128\", \"251\", \"184\", \"189\", \"042\",…\n$ ccs_diagnosis_description           <chr> \"Asthma\", \"Abdominal pain\", \"Early…\n$ ccs_procedure_code                  <chr> \"000\", \"000\", \"000\", \"134\", \"090\",…\n$ ccs_procedure_description           <chr> \"NO PROC\", \"NO PROC\", \"NO PROC\", \"…\n$ apr_drg_code                        <chr> \"141\", \"251\", \"563\", \"540\", \"224\",…\n$ apr_drg_description                 <chr> \"Asthma\", \"Abdominal pain\", \"Prete…\n$ apr_mdc_code                        <chr> \"04\", \"06\", \"14\", \"14\", \"06\", \"14\"…\n$ apr_mdc_description                 <chr> \"Diseases and Disorders of the Res…\n$ apr_severity_of_illness_code        <chr> \"2\", \"1\", \"2\", \"1\", \"2\", \"1\", \"1\",…\n$ apr_severity_of_illness_description <chr> \"Moderate\", \"Minor\", \"Moderate\", \"…\n$ apr_risk_of_mortality               <chr> \"Minor\", \"Minor\", \"Minor\", \"Minor\"…\n$ apr_medical_surgical_description    <chr> \"Medical\", \"Medical\", \"Medical\", \"…\n$ source_of_payment_1                 <chr> \"Medicaid\", \"Medicaid\", \"Medicaid\"…\n$ source_of_payment_2                 <chr> \"Medicaid\", \"Self-Pay\", \"Medicaid\"…\n$ source_of_payment_3                 <chr> \"Self-Pay\", NA, \"Self-Pay\", NA, \"S…\n$ birth_weight                        <chr> \"0000\", \"0000\", \"0000\", \"0000\", \"0…\n$ abortion_edit_indicator             <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ emergency_department_indicator      <chr> \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ total_charges                       <chr> \"9965.25\", \"6685.95\", \"12885.00\", …\n$ total_costs                         <chr> \"3269.66\", \"2148.08\", \"4132.75\", \"…\n```\n:::\n:::\n\n\nNot that I can tell, and still a limited dataset is downloaded. After some google searches, I found the {RSocrata} that may be helpful.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(RSocrata)\ndat <- RSocrata::read.socrata(\"https://health.data.ny.gov/resource/u4ud-w55t.json\",app_token = read_json('.apptoken')[['token']])\n\ndat %>% dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,544,543\nColumns: 34\n$ hospital_service_area               <chr> \"Western NY\", \"Western NY\", \"Weste…\n$ hospital_county                     <chr> \"Allegany\", \"Allegany\", \"Allegany\"…\n$ operating_certificate_number        <chr> \"0226700\", \"0226700\", \"0226700\", \"…\n$ facility_id                         <chr> \"37\", \"37\", \"37\", \"37\", \"37\", \"37\"…\n$ facility_name                       <chr> \"Cuba Memorial Hospital Inc\", \"Cub…\n$ age_group                           <chr> \"30 to 49\", \"70 or Older\", \"30 to …\n$ zip_code_3_digits                   <chr> \"147\", \"147\", \"147\", \"147\", \"147\",…\n$ gender                              <chr> \"F\", \"F\", \"F\", \"F\", \"F\", \"F\", \"M\",…\n$ race                                <chr> \"White\", \"White\", \"White\", \"White\"…\n$ ethnicity                           <chr> \"Not Span/Hispanic\", \"Not Span/His…\n$ length_of_stay                      <chr> \"4\", \"4\", \"3\", \"1\", \"3\", \"1\", \"3\",…\n$ type_of_admission                   <chr> \"Elective\", \"Urgent\", \"Urgent\", \"U…\n$ patient_disposition                 <chr> \"Home or Self Care\", \"Short-term H…\n$ discharge_year                      <chr> \"2012\", \"2012\", \"2012\", \"2012\", \"2…\n$ ccs_diagnosis_code                  <chr> \"122\", \"197\", \"122\", \"122\", \"122\",…\n$ ccs_diagnosis_description           <chr> \"Pneumonia (except that caused by …\n$ ccs_procedure_code                  <chr> \"000\", \"000\", \"000\", \"000\", \"000\",…\n$ ccs_procedure_description           <chr> \"NO PROC\", \"NO PROC\", \"NO PROC\", \"…\n$ apr_drg_code                        <chr> \"139\", \"383\", \"139\", \"139\", \"139\",…\n$ apr_drg_description                 <chr> \"Other pneumonia\", \"Cellulitis & o…\n$ apr_mdc_code                        <chr> \"04\", \"09\", \"04\", \"04\", \"04\", \"06\"…\n$ apr_mdc_description                 <chr> \"Diseases and Disorders of the Res…\n$ apr_severity_of_illness_code        <chr> \"1\", \"3\", \"1\", \"1\", \"2\", \"1\", \"2\",…\n$ apr_severity_of_illness_description <chr> \"Minor\", \"Major\", \"Minor\", \"Minor\"…\n$ apr_risk_of_mortality               <chr> \"Minor\", \"Major\", \"Minor\", \"Minor\"…\n$ apr_medical_surgical_description    <chr> \"Medical\", \"Medical\", \"Medical\", \"…\n$ source_of_payment_1                 <chr> \"Blue Cross/Blue Shield\", \"Medicar…\n$ birth_weight                        <chr> \"0000\", \"0000\", \"0000\", \"0000\", \"0…\n$ abortion_edit_indicator             <chr> \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ emergency_department_indicator      <chr> \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\",…\n$ total_charges                       <chr> \"5511.95\", \"4783.20\", \"3829.15\", \"…\n$ total_costs                         <chr> \"5582.49\", \"5162.82\", \"4056.52\", \"…\n$ source_of_payment_2                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ source_of_payment_3                 <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA…\n```\n:::\n:::\n\n\nEureka! This downloaded a full dataset. So seems like I can use this package to start reading in and playing with full datasets. I can also use the API to make smaller requests based on filters, too. Tis will be better in the long run since I don't want to have to download entire datasets. But maybe I will once and store using {arrow} so a web app or notebook doesn't make a lot of API calls. We shall see how this journey unfolds!\n\nHope this train of thought is useful to you readers! I'll definitely come back to this.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}